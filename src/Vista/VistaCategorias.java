/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vista;

import Controlador.CategoriaControlador;
import Modelo.Categoria;
import java.util.List;
import javax.swing.table.DefaultTableModel;

import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.TextAlignment;
import com.itextpdf.layout.property.UnitValue;
import java.awt.FileDialog;
import javax.swing.JOptionPane;
/**
 *
 * @author Gena
 */
public class VistaCategorias extends javax.swing.JPanel {

    private final CategoriaControlador categoriaControlador;

    /**
     * Creates new form VistaCategoria
     */
    public VistaCategorias() {
        initComponents();
        this.categoriaControlador = new CategoriaControlador();
        cargarDatosTabla();
    }
    
    private void cargarDatosTabla() {
        List<Categoria> categorias = categoriaControlador.obtenerTodasCategorias();
        
        if (categorias != null) {
            DefaultTableModel model = (DefaultTableModel) tablaCategorias.getModel();
            model.setRowCount(0);
            
            for (Categoria cat : categorias) {
                Object[] row = {
                    cat.getIdCategoria(),
                    cat.getNombreCategoria(),
                    cat.getDescripcionCategoria()
                };
                model.addRow(row);
            }
        }
    }

    private Integer idCategoriaSeleccionada = null;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        textBuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCategorias = new javax.swing.JTable();
        textNombreCategoria = new javax.swing.JTextField();
        textDescripcionCategoria = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(788, 430));

        jLabel1.setText("Nombre: Categoria");

        jLabel2.setText("Descripcion: Categoria");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionBotonGuardar(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        textBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBuscarActionPerformed(evt);
            }
        });
        textBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textBuscarKeyTyped(evt);
            }
        });

        tablaCategorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID Categoria", "Nombre", "Descripci√≥n"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCategorias.setPreferredSize(new java.awt.Dimension(230, 80));
        tablaCategorias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCategoriaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaCategorias);

        jLabel3.setText("Buscar");

        jButton1.setText("Generar Reporte");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionBotonGenerarReporte(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(0, 17, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(41, 41, 41)
                                        .addComponent(textNombreCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textDescripcionCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(183, 183, 183)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNombreCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textDescripcionCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGuardar)
                            .addComponent(btnEliminar)
                            .addComponent(btnActualizar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(textBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textBuscarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        String nombre = textNombreCategoria.getText();
        String descripcion = textDescripcionCategoria.getText();
        
        if(idCategoriaSeleccionada != null && !nombre.isEmpty() && !descripcion.isEmpty()){
           categoriaControlador.actualizarCategoria(idCategoriaSeleccionada, nombre, descripcion);
           cargarDatosTabla();
           
           textNombreCategoria.setText("");
           textDescripcionCategoria.setText("");
           idCategoriaSeleccionada = null;
           
           btnEliminar.setEnabled(true);
           btnGuardar.setEnabled(true);
        }else{
            javax.swing.JOptionPane.showMessageDialog(this, "Por favor, llene todos los campos","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void accionBotonGuardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionBotonGuardar
        // TODO add your handling code here:
        String nombre = textNombreCategoria.getText();
        String descripcion = textDescripcionCategoria.getText();
        
        if (!nombre.isEmpty() && !descripcion.isEmpty()){
            categoriaControlador.crearCategoria(nombre, descripcion);
            cargarDatosTabla();
            textNombreCategoria.setText("");
            textDescripcionCategoria.setText("");
            
        } else{
            javax.swing.JOptionPane.showMessageDialog(this, "Por favor, llene todos los campos","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_accionBotonGuardar

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tablaCategorias.getSelectedRow();
        if (filaSeleccionada != -1) {
            int idCategoria = (int) tablaCategorias.getValueAt(filaSeleccionada, 0);
            categoriaControlador.eliminarCategoria(idCategoria);
            cargarDatosTabla();
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Selecciona una fila para eliminar.", "Eror", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tablaCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCategoriaMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() == 2){
            int filaSeleccionada = tablaCategorias.getSelectedRow();
            
            if (filaSeleccionada != -1){
                idCategoriaSeleccionada = (int) tablaCategorias.getValueAt(filaSeleccionada, 0);
                String nombre = (String) tablaCategorias.getValueAt(filaSeleccionada, 1);
                String descripcion = (String) tablaCategorias.getValueAt(filaSeleccionada, 1);
                
                textNombreCategoria.setText(nombre);
                textDescripcionCategoria.setText(descripcion);
                
                btnEliminar.setEnabled(false);
                btnGuardar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_tablaCategoriaMouseClicked

    private void textBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textBuscarKeyTyped
        // TODO add your handling code here:
        String textoBusqueda = textBuscar.getText().trim().toLowerCase();
        List<Categoria> categorias = categoriaControlador.obtenerTodasCategorias();
        
        DefaultTableModel modelo = (DefaultTableModel) tablaCategorias.getModel();
        modelo.setRowCount(0);
        
        if (categorias != null) {
            for (Categoria cat : categorias) {
                if (textoBusqueda.isEmpty() 
                            || cat.getNombreCategoria().toLowerCase().contains(textoBusqueda)
                            || cat.getDescripcionCategoria().toLowerCase().contains(textoBusqueda)) {
                
                Object[] fila = {
                        cat.getIdCategoria(),
                        cat.getNombreCategoria(),
                        cat.getDescripcionCategoria()
                    };
                    modelo.addRow(fila);
                }
            }
        }
    }//GEN-LAST:event_textBuscarKeyTyped

    private void accionBotonGenerarReporte(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionBotonGenerarReporte
        // TODO add your handling code here:
        try{
            FileDialog dialogoArchivo = new FileDialog((java.awt.Frame) null, "Guardar Reporte PDF", FileDialog.SAVE);
            dialogoArchivo.setFile("ReporteCategorias.pdf");
            dialogoArchivo.setVisible(true);
            
            String ruta = dialogoArchivo.getDirectory();
            String nombreArchivo = dialogoArchivo.getFile();
            
            if(ruta == null || nombreArchivo == null){
                JOptionPane.showMessageDialog(this, "Operati√≥n cancelada.", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            String rutaCompleta = ruta + nombreArchivo;
            
            PdfWriter escritor = new PdfWriter(rutaCompleta);
            PdfDocument pdf = new PdfDocument(escritor);
            Document documento = new Document(pdf);
            
            documento.add(new Paragraph("Reporte de Categoria")
                    .setTextAlignment (TextAlignment.CENTER)
                    .setFontSize(20)
                    .setBold());
            
            documento.add(new Paragraph("Fecha: "+ new java.util.Date().toString())
                    .setTextAlignment(TextAlignment.CENTER)
                    .setFontSize(12));
            
            Table tabla = new Table(3);
            tabla.setWidth(UnitValue.createPercentValue(100));
            tabla.addHeaderCell("ID Categor√≠a").setBold();
            tabla.addHeaderCell("Hombre").setBold();
            tabla.addHeaderCell("Descripci√≥n").setBold();
            
            List<Categoria> listaCategorias =
            categoriaControlador.obtenerTodasCategorias();
            if(listaCategorias != null){
                for(Categoria categoria : listaCategorias){
                    tabla.addCell(String.valueOf(categoria.getIdCategoria()));
                    tabla.addCell(categoria.getNombreCategoria());
                    tabla.addCell(categoria.getDescripcionCategoria());
                }
            }
            
            documento.add(tabla);
            
            documento.add(new Paragraph("Notas: Reporte generado autom√°ticamente desde el sistema.")
                    .setFontSize(10)
                    .setMarginTop(20));
            
            documento.close();
            JOptionPane.showMessageDialog(
                    this,
                    "Reporte PDF generado con √©xito en: " + rutaCompleta,
                    "√âxito", JOptionPane.INFORMATION_MESSAGE);
            
        }catch (Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(
                this,
                "Error al generar el PDF: " + e.getMessage(),
                "Error", JOptionPane.ERROR);
        }
    }//GEN-LAST:event_accionBotonGenerarReporte


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaCategorias;
    private javax.swing.JTextField textBuscar;
    private javax.swing.JTextField textDescripcionCategoria;
    private javax.swing.JTextField textNombreCategoria;
    // End of variables declaration//GEN-END:variables

}
